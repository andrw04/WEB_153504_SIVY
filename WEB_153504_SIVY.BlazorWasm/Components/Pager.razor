@inject IDataService dataService

@if (dataService.TotalPages > 0)
{
    <ul class="pagination">
        <li class="page-item">
            @if (CarBodyType != null)
            {
                <a class="page-link" href="/menu/@CarBodyType/@(dataService.CurrentPage == 1 ? 1 : dataService.CurrentPage - 1)">Prev</a>
            }
            else
            {
                <a class="page-link" href="/menu/@(dataService.CurrentPage == 1 ? 1 : dataService.CurrentPage - 1)">Prev</a>
            }
            
        </li>
        @for(int i = 1; i <= dataService.TotalPages; i++)
        {
            <li class="page-item @(dataService.CurrentPage == i ? "active" : "")">
                @if (CarBodyType != null)
                {
                    <a class="page-link" href="/menu/@CarBodyType/@i">@i</a>
                }
                else
                {
                    <a class="page-link" href="/menu/@i">@i</a>
                }
            </li>
        }
        <li class="page-item">
            @if (CarBodyType != null)
            {
                <a class="page-link" href="/menu/@CarBodyType/@(dataService.CurrentPage == dataService.TotalPages ? dataService.TotalPages : dataService.CurrentPage + 1)">Next</a>
            }
            else
            {
                <a class="page-link" href="/menu/@(dataService.CurrentPage == dataService.TotalPages ? dataService.TotalPages : dataService.CurrentPage + 1)">Next</a>
            }
            
        </li>
    </ul>
}

@code {
    [Parameter]
    public string CarBodyType { get; set; }

    protected async override Task OnInitializedAsync()
    {
        dataService.DataLoaded += StateHasChanged;
    }

    public void Dispose()
    {
        dataService.DataLoaded -= StateHasChanged;
    }
}
